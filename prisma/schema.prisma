generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SoberCheers {
  id                Int       @id @default(autoincrement())
  gender            String?
  firstName         String
  lastName          String
  birthday          DateTime
  addressLine1      String
  district          String
  amphoe            String
  province          String
  zipcode           String
  type              String?
  phone             String?    
  job               String
  alcoholConsumption String
  drinkingFrequency String?
  intentPeriod      String?
  monthlyExpense    Int?
  motivations       Json
  healthImpact      String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

// model SoberCheers {
//   id                Int       @id @default(autoincrement())
//   gender            String?
//   firstName         String
//   lastName          String?   
//   birthday          DateTime?  
//   addressLine1      String?   
//   district          String?   
//   amphoe            String?   
//   province          String?   
//   zipcode           String?   
//   type              String?
//   phone             String?    
//   job               String?   
//   alcoholConsumption String?  
//   drinkingFrequency String?
//   intentPeriod      String?
//   monthlyExpense    Int?
//   motivations       Json?     
//   healthImpact      String?   
//   createdAt         DateTime  @default(now())
//   updatedAt         DateTime  @updatedAt
// }


model CampaignBuddhistLent {
  id                Int       @id @default(autoincrement())
  gender            String
  userId            Int       @unique
  user              User      @relation(fields: [userId], references: [id])
  firstName         String
  lastName          String
  birthday          DateTime
  addressLine1      String
  district          String
  amphoe            String
  province          String
  zipcode           String
  type              String?
  phone             String?    
  job               String
  alcoholConsumption String
  drinkingFrequency String?
  intentPeriod      String?
  monthlyExpense    Int?
  motivations       Json
  healthImpact      String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
model User {
  id                Int                     @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String                  @unique
  password          String?
  image             String?
  role              String                  @default("member")
  emailVerified     DateTime?
  resetToken        String?
  resetTokenCreatedAt DateTime?
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
  campaignBuddhistLent CampaignBuddhistLent[]
}

enum Role {
  member
  admin
}

model Form_return {
  id               Int       @id @default(autoincrement())
  firstName        String
  lastName         String
  organizationName String
  addressLine1     String
  district         String
  amphoe           String    
  province         String
  zipcode          String
  type             String
  phoneNumber      String    @unique
  image1           String
  image2           String
  numberOfSigners  Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  @@index([createdAt])
  @@index([province, createdAt])
  @@map("form_return")
}
